// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo_Api.Data;

#nullable disable

namespace Todo_Api.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Todo_Api.Models.TaskDependency", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("DependencyId")
                        .HasColumnType("int");

                    b.HasKey("TaskId", "DependencyId");

                    b.HasIndex("DependencyId");

                    b.ToTable("TaskDependencies");
                });

            modelBuilder.Entity("Todo_Api.Models.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Todo_Api.Models.TaskDependency", b =>
                {
                    b.HasOne("Todo_Api.Models.Tasks", "Dependency")
                        .WithMany("DependentOnTasks")
                        .HasForeignKey("DependencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Todo_Api.Models.Tasks", "Task")
                        .WithMany("TaskDependencies")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dependency");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Todo_Api.Models.Tasks", b =>
                {
                    b.Navigation("DependentOnTasks");

                    b.Navigation("TaskDependencies");
                });
#pragma warning restore 612, 618
        }
    }
}
